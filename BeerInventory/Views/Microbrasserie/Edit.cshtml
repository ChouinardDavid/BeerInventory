@model BeerInventory.Models.MicrobrasserieModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    <div>
        @if (ViewBag.ErrorMessage != null)
        {
            @Html.Label((string)ViewBag.ErrorMessage, new { @class = "" })
            ViewBag.ErrorMessage = null;
        }
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
        <h4>Modifier la Microbrasserie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.micro.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.micro.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.micro.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.micro.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.regions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.regions, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.micro.Region.Id, Model.regions)
                @*@Html.TextBoxFor(model => model.regions.Nom, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.regions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.micro.Bieres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.micro.Bieres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.micro.Bieres, "", new { @class = "text-danger" })
            </div>
            @if (Model.micro.Bieres.Any())
            {
                <div>
                    @Html.Label("Aucune bière dans cette micro", new { @class = "" })
                </div>
            }
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @*@Html.ActionLink("Edit", "Edit", new { @class = "btn" })*@
            </div>
        </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
